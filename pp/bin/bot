#!/usr/bin/env php
<?php
error_reporting(0);

if (defined('STDIN')) {
	if (isset($argv[1])) {
		switch ($argv[1]) {
			case 'install-web':
				file_put_contents('run', file_get_contents('https://raw.githubusercontent.com/dimaslanjaka/currency-converter/master/pp/bin/run'));
				file_put_contents('content.php', file_get_contents('https://raw.githubusercontent.com/dimaslanjaka/currency-converter/master/pp/bin/content.php'));
				file_put_contents('func.php', file_get_contents('https://raw.githubusercontent.com/dimaslanjaka/currency-converter/master/pp/bin/func.php'));
				file_put_contents('index.php', file_get_contents('https://raw.githubusercontent.com/dimaslanjaka/currency-converter/master/pp/bin/index.php'));
				echo warna("Webserver initialized\n", "green");
				exit;
				break;
			case 'help':
				echo "
Script : " . realpath(__DIR__ . '/' . basename(__FILE__)) . "
Update : " . warna(basename(__FILE__) . " update", "green") . "
Install Webserver : " . warna(basename(__FILE__) . " install-web", "green") . "
      ";
				exit;
				break;
			case 'update':
				file_put_contents(__DIR__ . '/' . basename(__FILE__), file_get_contents('https://raw.githubusercontent.com/dimaslanjaka/currency-converter/master/pp/bin/bot'));
				echo warna("Updated successfully\n", 'green');
				break;
		}
	}
}

welcome();
echo 'berapa kali: ';
$loop = trim(fgets(STDIN));
if (!is_numeric($loop)) {
	die(warna("Harus nomor, serah lu lah\n", "red"));
}
$cookie = getCookie('cookie.txt');
$csrf = getCsrf('csrf.txt');
if (!file_exists('ua.txt')) {
	file_put_contents('ua.txt', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36');
}
$ua = file_get_contents('ua.txt');
$twd2usd = $loop;
for ($x = 0; $x < $loop; ++$x) {
	$usd_to_twd = usd_to_twd($cookie, $csrf);
	$out = json_encode($usd_to_twd);
	$amount = getStr($out, '"value":"', '"');
	if (true == strpos($out, 'null')) {
		$text3 = "Success convert 0.02 USD  to $amount TWD";
		echo warna(date('d-m-Y H:i:s ') . $text3 . "\n", 'green');
	} else {
		$text4 = 'Failed Convert USD2TWD';
		echo warna(date('d-m-Y H:i:s ') . $text4 . "\n", 'red');
		--$twd2usd;
	}
	sleep(1);
	if ($x == $loop - 1) {
		$twd_to_usd = twd_to_usd($cookie, $csrf, $twd2usd);
		$out = json_encode($twd_to_usd);
		$amount = getStr($out, '"value":"', '"');
		if (true == strpos($out, 'null')) {
			$text3 = warna("Success convert $loop TWD  to $amount USD", 'green');
			echo date('d-m-Y H:i:s ') . $text3 . "\n";
		} else {
			$text4 = 'Failed Convert USD2TWD';
			echo warna(date('d-m-Y H:i:s ') . $text4 . "\n", 'red');
		}
	}
}

function getStr($string, $start, $end)
{
	$str = explode($start, $string);
	$str = explode($end, ($str[1]));

	return $str[0];
}

function warna($text, $warna)
{
	$warna = strtoupper($warna);
	$list = [];
	$list['BLACK'] = "\033[30m";
	$list['RED'] = "\033[31m";
	$list['GREEN'] = "\033[32m";
	$list['YELLOW'] = "\033[33m";
	$list['BLUE'] = "\033[34m";
	$list['MAGENTA'] = "\033[35m";
	$list['CYAN'] = "\033[36m";
	$list['WHITE'] = "\033[37m";
	$list['RESET'] = "\033[39m";
	$warna = $list[$warna];
	$reset = $list['RESET'];
	if (in_array($warna, $list)) {
		$text = "$warna$text$reset";
	} else {
		$text = $text;
	}

	return $text;
}
function twd_to_usd($cookie, $csrf, $am)
{
	global $ua;
	if (!$am) {
		die(warna('amount TWD2USD is zero', 'red'));
	}
	$arr = ["\r", '	'];
	$url = 'https://www.paypal.com/myaccount/money/api/currencies/transfer';
	$h = explode("\n", str_replace($arr, '', "Cookie: $cookie
	Content-Type: application/json
	user-agent: $ua"));
	$body = "{\"sourceCurrency\":\"TWD\",\"sourceAmount\":$am,\"targetCurrency\":\"USD\",\"_csrf\":\"$csrf\"}";
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_HTTPHEADER, $h);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $body);
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	$x = curl_exec($ch);
	curl_close($ch);

	return json_decode($x, true);
}
function usd_to_twd($cookie, $csrf)
{
	global $ua;
	$arr = ["\r", '	'];
	$url = 'https://www.paypal.com/myaccount/money/api/currencies/transfer';
	$h = explode("\n", str_replace($arr, '', "Cookie: $cookie
	Content-Type: application/json
	user-agent: $ua"));
	$body = "{\"sourceCurrency\":\"USD\",\"sourceAmount\":0.02,\"targetCurrency\":\"TWD\",\"_csrf\":\"$csrf\"}";
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_HTTPHEADER, $h);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $body);
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	$x = curl_exec($ch);
	curl_close($ch);

	return json_decode($x, true);
}

function getCookie($file)
{
	if (!file_exists($file)) {
		file_put_contents($file, '');
		exit($file . ' not found');
	}
	$cookieStr = file_get_contents($file);
	if ($cookieStr && !empty($cookieStr) && countLine($file) > 1) {
		$cookieStre = explode("\n", $cookieStr);
		$cookieStrr = '';
		foreach ($cookieStre as $line) {
			$rgx = '/Set\-Cookie\:\s/m';
			$x = preg_replace($rgx, '', $line);
			$x = preg_replace('/\n+/m', ";\s", $x);
			$x = str_replace("\n", '', $x);
			$x = str_replace("\r", '', $x);
			$x = str_replace(PHP_EOL, '', $x);
			$x = str_replace('
				', '', $x);
			$x = preg_replace('/\s+/', ' ', $x);
			$x .= '; ';
			$cookieStrr .= trim($x) . ' ';
		}
		$cookieStrr = preg_replace('/\;{2,10}|\;(\s|\s+)\;/m', ';', $cookieStrr);
		$cookieStrr = str_replace(['; ;', '; ;'], ';', $cookieStrr);
		file_put_contents($file, $cookieStrr);
		$cookieStr = $cookieStrr;
	}

	return $cookieStr;
}

function countLine($file)
{
	$linecount = 0;
	$handle = fopen($file, 'r');
	while (!feof($handle)) {
		$line = fgets($handle);
		++$linecount;
	}

	fclose($handle);

	return $linecount;
}

function getCsrf($file)
{
	if (!file_exists($file)) {
		file_put_contents($file, '');
		exit($file . ' not found');
	}
	$str = file_get_contents($file);
	if (isJson($str)) {
		$j = (array) json_decode($str);
		$str = isset($j['_csrf']) ? $j['_csrf'] : die(warna('CSRF invalid JSON format', 'red'));
		file_put_contents($file, $str);
	}

	return $str;
}

function isJson($string)
{
	json_decode($string);

	return JSON_ERROR_NONE == json_last_error();
}


function welcome()
{
	echo "\033[36m###############################################\n#                  @⁨L3N4R0X    ⁩               #\n#                SHADOW FAMILY                #\n#        SEMOGA SELAMAT SAMPAI TUJUAN         #\n###############################################\n";
	echo "\33[35m#                 NUYUL PAYPAL                #\n#                    READY!?                  #\n#                     GO!                     #\n###############################################\n";
	echo "\n\n";
}
